{"version":3,"sources":["components/calc-button/CalculatorButton.js","components/calc-field/CalculatorField.js","components/calculator/Calculator.js","App.js","index.js"],"names":["CalculatorButton","props","className","onClick","number","console","log","onCalcButtonClicked","CalculatorField","chainOfOperations","MATCH_LAST_NUMBER_REGEX","Calculator","useState","setChainOfOperations","numberToShow","setNumberToShow","lastAddedOp","setLastAddedOp","addOperationtoOpChain","num","isValidConcatenation","newChainOfOperations","addOperatorToOpChain","op","character","isSign","slice","val","numToConcatenate","parseInt","updatedChainOfOp","replace","onPosNegClicked","resolvedChainOfOp","create","all","evaluate","evaluateOpChain","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.425c13ac.chunk.js","sourcesContent":["import './CalculatorButton.css';\n\nfunction CalculatorButton(props) {\n\n  function onCalcButtonClick(number) {\n    console.log('You clicked ', number)\n    props.onCalcButtonClicked(number)\n  }\n\n  return (\n    <div className=\"CalculatorButton\">\n      <button className=\"calc-button\" onClick={() => onCalcButtonClick(props.number)}>\n        <p className=\"calc-button-text\">{props.number}</p>\n        </button>\n    </div>\n  );\n}\n\nexport default CalculatorButton;\n","import './CalculatorField.css';\n\nfunction CalculatorField(props) {\n  return (\n    <div className=\"CalculatorField\">\n      <p className=\"field-text\">{props.chainOfOperations}</p>\n    </div>\n  );\n}\n\nexport default CalculatorField;\n","import \"./Calculator.css\";\nimport CalculatorButton from \"../calc-button/CalculatorButton\";\nimport CalculatorField from \"../calc-field/CalculatorField\";\nimport { useState } from \"react\";\nimport { create, all } from \"mathjs\";\n\nconst MATCH_LAST_NUMBER_REGEX = /(\\/\\*\\+\\-\\.)?[0-9]+$/gm;\n\nfunction Calculator() {\n  const [chainOfOperations, setChainOfOperations] = useState(\"\");\n  const [numberToShow, setNumberToShow] = useState(\"\");\n  const [lastAddedOp, setLastAddedOp] = useState(false);\n\n  function addOperationtoOpChain(num) {\n    console.log(\"Calculator: you clicked \", num);\n    if (!isValidConcatenation(num)) {\n      return;\n    }\n\n    const newChainOfOperations = chainOfOperations + num;\n\n    if (lastAddedOp) {\n      setNumberToShow('' + num); //reset\n      setLastAddedOp(false);\n    } else {\n      setNumberToShow(numberToShow + num)\n    }\n\n    setChainOfOperations(newChainOfOperations);\n    console.log(\"newChainOfOperations \", newChainOfOperations);\n  }\n\n  function addOperatorToOpChain(op) {\n    console.log(\"Calculator: you clicked \", op);\n    if (!isValidConcatenation(op)) {\n      return;\n    }\n\n    const newChainOfOperations = chainOfOperations + op;\n    setLastAddedOp(true);\n    //keep displaying old num\n    setChainOfOperations(newChainOfOperations);\n  }\n\n  function isValidConcatenation(character) {\n    if (\n      typeof character != \"number\" &&\n      (isSign(chainOfOperations.slice(-1)) ||\n        isEmpty(chainOfOperations.slice(-1)))\n    ) {\n      console.log(\"Concatenation is not valid\");\n      return false;\n    }\n    console.log(\"Concatenation is valid\");\n    return true;\n  }\n\n  function isSign(val) {\n    return val === \"+\" || val === \"-\" || val === \"*\" || val === \"/\" || val === \".\";\n  }\n\n  function isEmpty(val) {\n    return val === \"\";\n  }\n\n  function resetChainOfOperations() {\n    setNumberToShow('');\n    setChainOfOperations(\"\");\n  }\n\n  function onPosNegClicked() {\n    let numToConcatenate = numberToShow;\n    if (parseInt(numToConcatenate) > 0) {\n      setNumberToShow('-' + numToConcatenate)\n    } else {\n      numToConcatenate = numToConcatenate.slice(1)\n      setNumberToShow(numToConcatenate)\n    }\n    let updatedChainOfOp = chainOfOperations;\n    updatedChainOfOp = updatedChainOfOp.replace(MATCH_LAST_NUMBER_REGEX, \"-\" + numToConcatenate);\n    setChainOfOperations(updatedChainOfOp);\n  }\n\n  // function removeLastItemFromOpChain() {\n  //   let updatedChainOfOp = chainOfOperations;\n  //   //setChainOfOperations(updatedChainOfOp.slice(0, -1));\n  //   updatedChainOfOp = updatedChainOfOp.replace(MATCH_LAST_NUMBER_REGEX, \"\");\n\n  //   console.log('updatedChainOfOp with regex ', updatedChainOfOp)\n  //   // if (isSign(updatedChainOfOp.slice(-1))) { //to remove also the sign left in the end\n  //   //   console.log('updatedChainOfOp has a sign at the end')\n  //   //   updatedChainOfOp = updatedChainOfOp.slice(0, -1)\n  //   // }\n  //   setChainOfOperations(updatedChainOfOp);\n  // }\n\n  function evaluateOpChain() {\n    if (chainOfOperations === \"\" || isSign(chainOfOperations.slice(-1))) {\n      return;\n    }\n    const math = create(all);\n    const resolvedChainOfOp = \"\" + math.evaluate(chainOfOperations);\n    setNumberToShow(resolvedChainOfOp);\n    setChainOfOperations(resolvedChainOfOp);\n  }\n\n  return (\n    <div className=\"Calculator\">\n      <p className=\"calc-title\"> Calculator </p>\n      <CalculatorField chainOfOperations={numberToShow} />\n      <div className=\"calc-row\">\n        <CalculatorButton\n          number={\"C\"}\n          onCalcButtonClicked={() => resetChainOfOperations()}\n        />\n        <CalculatorButton\n          onCalcButtonClicked={() => console.log(\"No action\")}\n        />\n        {/* <CalculatorButton\n          number={\"<\"}\n          onCalcButtonClicked={() => removeLastItemFromOpChain()}\n        /> */}\n        <CalculatorButton\n          number={\"+-\"}\n          onCalcButtonClicked={(num) => onPosNegClicked(num)}\n        />\n        <CalculatorButton\n          number={\"/\"}\n          onCalcButtonClicked={(num) => addOperatorToOpChain(num)}\n        />\n      </div>\n      <div className=\"calc-row\">\n        <CalculatorButton\n          number={7}\n          onCalcButtonClicked={(num) => addOperationtoOpChain(num)}\n        />\n        <CalculatorButton\n          number={8}\n          onCalcButtonClicked={(num) => addOperationtoOpChain(num)}\n        />\n        <CalculatorButton\n          number={9}\n          onCalcButtonClicked={(num) => addOperationtoOpChain(num)}\n        />\n        <CalculatorButton\n          number={\"*\"}\n          onCalcButtonClicked={(num) => addOperatorToOpChain(num)}\n        />\n      </div>\n      <div className=\"calc-row\">\n        <CalculatorButton\n          number={4}\n          onCalcButtonClicked={(num) => addOperationtoOpChain(num)}\n        />\n        <CalculatorButton\n          number={5}\n          onCalcButtonClicked={(num) => addOperationtoOpChain(num)}\n        />\n        <CalculatorButton\n          number={6}\n          onCalcButtonClicked={(num) => addOperationtoOpChain(num)}\n        />\n        <CalculatorButton\n          number={\"-\"}\n          onCalcButtonClicked={(num) => addOperatorToOpChain(num)}\n        />\n      </div>\n      <div className=\"calc-row\">\n        <CalculatorButton\n          number={1}\n          onCalcButtonClicked={(num) => addOperationtoOpChain(num)}\n        />\n        <CalculatorButton\n          number={2}\n          onCalcButtonClicked={(num) => addOperationtoOpChain(num)}\n        />\n        <CalculatorButton\n          number={3}\n          onCalcButtonClicked={(num) => addOperationtoOpChain(num)}\n        />\n        <CalculatorButton\n          number={\"+\"}\n          onCalcButtonClicked={(num) => addOperatorToOpChain(num)}\n        />\n      </div>\n      <div className=\"calc-row\">\n        <CalculatorButton\n          onCalcButtonClicked={() => console.log(\"No action\")}\n        />\n        <CalculatorButton\n          number={0}\n          onCalcButtonClicked={(num) => addOperationtoOpChain(num)}\n        />\n        <CalculatorButton\n          number={\".\"}\n          onCalcButtonClicked={(num) => addOperationtoOpChain(num)}\n        />\n        <CalculatorButton\n          number={\"=\"}\n          onCalcButtonClicked={() => evaluateOpChain()}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Calculator;\n","import './App.css';\nimport Calculator from './components/calculator/Calculator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"calculator-container\">\n        <Calculator />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}